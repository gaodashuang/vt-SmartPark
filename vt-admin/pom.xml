<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>vt</artifactId>
        <groupId>com.vt</groupId>
        <version>4.3.1</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>war</packaging>
    <artifactId>vt-admin</artifactId>

    <description>
        web服务入口
    </description>

    <dependencies>

        <!-- SpringBoot集成thymeleaf模板 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <!-- spring-boot-devtools -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional> <!-- 表示依赖不会传递 -->
        </dependency>

        <!-- swagger2-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
        </dependency>

        <!--防止进入swagger页面报类型转换错误，排除2.9.2中的引用，手动增加1.5.21版本-->
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>1.5.21</version>
        </dependency>

        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-models</artifactId>
            <version>1.5.21</version>
        </dependency>

        <!-- swagger2-UI-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
        </dependency>

        <!-- Mysql驱动包 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <!-- 核心模块-->
        <dependency>
            <groupId>com.vt</groupId>
            <artifactId>vt-framework</artifactId>
        </dependency>

        <!-- 定时任务-->
        <dependency>
            <groupId>com.vt</groupId>
            <artifactId>vt-quartz</artifactId>
        </dependency>

        <!-- 代码生成-->
        <dependency>
            <groupId>com.vt</groupId>
            <artifactId>vt-generator</artifactId>
        </dependency>

        <!-- 门禁管理-->
        <dependency>
            <groupId>com.vt</groupId>
            <artifactId>vt-door</artifactId>
        </dependency>

    </dependencies>

    <!--region  普通打包-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.1.1.RELEASE</version>
                <configuration>
                    <fork>true</fork> <!-- 如果没有该配置，devtools不会生效 -->
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <warName>${project.artifactId}</warName>
                    <webResources>
                        <resource>
                            <directory>${project.basedir}/lib</directory>
                            <targetPath>WEB-INF/lib</targetPath>
                            <filtering>false</filtering>
                            <includes>
                                <include>**/*.jar</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
        </plugins>
        <finalName>${project.artifactId}</finalName>
    </build>
    <!--endregion-->

    <!--region  分包打包-->
    <!--<build>-->
    <!--<plugins>-->
    <!--&lt;!&ndash;打包jar&ndash;&gt;-->
    <!--<plugin>-->
    <!--<groupId>org.apache.maven.plugins</groupId>-->
    <!--<artifactId>maven-jar-plugin</artifactId>-->
    <!--<configuration>-->
    <!--&lt;!&ndash;不打包资源文件 &ndash;&gt;-->
    <!--<excludes>-->
    <!--<exclude>*.**</exclude>-->
    <!--<exclude>*/*.xml</exclude>-->
    <!--</excludes>-->
    <!--<archive>-->
    <!--<manifest>-->
    <!--<addClasspath>true</addClasspath>-->
    <!--&lt;!&ndash;MANIFEST.MF 中 Class-Path 加入前缀 &ndash;&gt;-->
    <!--<classpathPrefix>lib/</classpathPrefix>-->
    <!--&lt;!&ndash;jar包不包含唯一版本标识 &ndash;&gt;-->
    <!--<useUniqueVersions>false</useUniqueVersions>-->
    <!--&lt;!&ndash;指定入口类 &ndash;&gt;-->
    <!--<mainClass>com.vt.AdminApplication</mainClass>-->
    <!--</manifest>-->
    <!--<manifestEntries>-->
    <!--&lt;!&ndash;MANIFEST.MF 中 Class-Path 加入资源文件目录 &ndash;&gt;-->
    <!--<Class-Path>./resources/</Class-Path>-->
    <!--</manifestEntries>-->
    <!--</archive>-->
    <!--<outputDirectory>${project.build.directory}</outputDirectory>-->
    <!--</configuration>-->
    <!--</plugin>-->

    <!--&lt;!&ndash;拷贝依赖 copy-dependencies &ndash;&gt;-->
    <!--<plugin>-->
    <!--<groupId>org.apache.maven.plugins</groupId>-->
    <!--<artifactId>maven-dependency-plugin</artifactId>-->
    <!--<executions>-->
    <!--<execution>-->
    <!--<id>copy-dependencies</id>-->
    <!--<phase>package</phase>-->
    <!--<goals>-->
    <!--<goal>copy-dependencies</goal>-->
    <!--</goals>-->
    <!--<configuration>-->
    <!--<outputDirectory>-->
    <!--${project.build.directory}/lib/-->
    <!--</outputDirectory>-->
    <!--</configuration>-->
    <!--</execution>-->
    <!--</executions>-->
    <!--</plugin>-->

    <!--&lt;!&ndash;拷贝资源文件 copy-resources &ndash;&gt;-->
    <!--<plugin>-->
    <!--<artifactId>maven-resources-plugin</artifactId>-->
    <!--<executions>-->
    <!--<execution>-->
    <!--<id>copy-resources</id>-->
    <!--<phase>package</phase>-->
    <!--<goals>-->
    <!--<goal>copy-resources</goal>-->
    <!--</goals>-->
    <!--<configuration>-->
    <!--<resources>-->
    <!--<resource>-->
    <!--<directory>src/main/resources</directory>-->
    <!--</resource>-->
    <!--</resources>-->
    <!--<outputDirectory>${project.build.directory}/resources</outputDirectory>-->
    <!--<encoding>UTF-8</encoding>-->
    <!--</configuration>-->
    <!--</execution>-->
    <!--<execution>-->
    <!--<id>copy-bulid</id>-->
    <!--<phase>package</phase>-->
    <!--<goals>-->
    <!--<goal>copy-resources</goal>-->
    <!--</goals>-->
    <!--<configuration>-->
    <!--<encoding>UTF-8</encoding>-->
    <!--<outputDirectory>-->
    <!--${project.build.directory}/lib-->
    <!--</outputDirectory>-->
    <!--<resources>-->
    <!--<resource>-->
    <!--<directory>${basedir}/lib</directory>-->
    <!--</resource>-->
    <!--</resources>-->
    <!--</configuration>-->
    <!--</execution>-->
    <!--</executions>-->
    <!--</plugin>-->

    <!--&lt;!&ndash;spring boot repackage，依赖 maven-jar-plugin 打包的jar包 重新打包成 spring boot-->
    <!--的jar包 &ndash;&gt;-->
    <!--<plugin>-->
    <!--<groupId>org.springframework.boot</groupId>-->
    <!--<artifactId>spring-boot-maven-plugin</artifactId>-->
    <!--<configuration>-->
    <!--&lt;!&ndash;重写包含依赖，包含不存在的依赖，jar里没有pom里的依赖 &ndash;&gt;-->
    <!--<includes>-->
    <!--<include>-->
    <!--<groupId>null</groupId>-->
    <!--<artifactId>null</artifactId>-->
    <!--</include>-->
    <!--</includes>-->
    <!--<layout>ZIP</layout>-->
    <!--&lt;!&ndash;使用外部配置文件，jar包里没有资源文件 &ndash;&gt;-->
    <!--<addResources>true</addResources>-->
    <!--<outputDirectory>${project.build.directory}</outputDirectory>-->
    <!--</configuration>-->
    <!--<executions>-->
    <!--<execution>-->
    <!--<goals>-->
    <!--<goal>repackage</goal>-->
    <!--</goals>-->
    <!--<configuration>-->
    <!--&lt;!&ndash;配置jar包特殊标识 配置后，保留原文件，生成新文件 *-run.jar &ndash;&gt;-->
    <!--&lt;!&ndash;配置jar包特殊标识 不配置，原文件命名为 *.jar.original，生成新文件 *.jar &ndash;&gt;-->
    <!--&lt;!&ndash;<classifier>run</classifier>&ndash;&gt;-->
    <!--</configuration>-->
    <!--</execution>-->
    <!--</executions>-->
    <!--</plugin>-->
    <!--</plugins>-->
    <!--</build>-->
    <!--endregion-->


</project>